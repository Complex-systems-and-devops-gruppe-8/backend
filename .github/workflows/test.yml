# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test CI

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    branches: 
      - "main"
      - "dev"

env:
  JAVA_VERSION: '21.0.3'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    - name: Generate JWT Keys
      run: |
        openssl genrsa -out test_private_key.pem 2048
        openssl rsa -in test_private_key.pem -pubout -out test_public_key.pem
        echo "SMALLRYE_JWT_SIGN_KEY_LOCATION=$PWD/test_private_key.pem" >> $GITHUB_ENV
        echo "MP_JWT_VERIFY_PUBLICKEY_LOCATION=$PWD/test_public_key.pem" >> $GITHUB_ENV

    - name: Build
      working-directory: script/test
      run: (cd ../../rest-client-quickstart ; ./mvnw clean package -Dquarkus.package.type=fast-jar -DskipTests)

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: | 
          rest-client-quickstart/target
          test_private_key.pem
          test_public_key.pem
        retention-days: 1

  test:
    needs: build

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: test-artifacts

    - name: Set JWT key locations
      run: |
        echo "SMALLRYE_JWT_SIGN_KEY_LOCATION=$PWD/test_private_key.pem" >> $GITHUB_ENV
        echo "MP_JWT_VERIFY_PUBLICKEY_LOCATION=$PWD/test_public_key.pem" >> $GITHUB_ENV

    - name: Test
      working-directory: script/test
      run: ( cd ../../rest-client-quickstart ; ./mvnw test )

    - name: Clean up artifacts
      if: always()
      uses: geekyeggo/delete-artifact@v2
      with:
        name: test-artifacts
